{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Petstore - OpenAPI 3.0",
    "description": "",
    "termsOfService": "http://swagger.io/terms/",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "movies",
      "description": "Everything about movies"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "auth",
      "description": "operation about register and login"
    }
  ],
  "paths": {
    "/movies": {
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "get all movies",
        "description": "get all movies",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/movies"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "movies"
        ],
        "summary": "create a movies",
        "description": "create a movies object",
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/movies-update"
                }
              }
            }
          }
        }
      }
    },
    "/movies/id": {
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "get movies by id",
        "description": "get movies by id",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/movies"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "movies"
        ],
        "summary": "update movies by id",
        "description": "update movies by id",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/movies-update"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "movies"
        ],
        "summary": "delete movies by id",
        "description": "delete movies by id",
        "responses": {
          "200": {
            "description": "Successful Operation"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get all user",
        "description": "get all user",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "create a user object",
        "description": "create a user object",
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users-update"
                }
              }
            }
          }
        }
      }
    },
    "/users/id": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "get user by id",
        "description": "get user by id",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/movies"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "update user by id",
        "description": "update user by id",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users-update"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "delete user by id",
        "description": "delete user by id",
        "responses": {
          "200": {
            "description": "Successful Operation"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "register",
        "description": "create user like user post, dont forget to add bearer token in header",
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users-update"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "login",
        "description": "login with email and password, dont forget to add bearer token in header",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/login"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "movies": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Reckless"
          },
          "genres": {
            "type": "string",
            "example": "Comedy|Drama|Romance"
          },
          "year": {
            "type": "string",
            "example": 1996
          }
        }
      },
      "movies-update": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Reckless"
          },
          "genres": {
            "type": "string",
            "example": "Comedy|Drama|Romance"
          },
          "year": {
            "type": "string",
            "example": 1996
          }
        }
      },
      "users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "oainger0@craigslist.org"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "password": {
            "type": "string",
            "example": "KcAk6Mrg7DRM"
          },
          "role": {
            "type": "string",
            "example": "admin"
          }
        }
      },
      "users-update": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "oainger0@craigslist.org"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "password": {
            "type": "string",
            "example": "KcAk6Mrg7DRM"
          },
          "role": {
            "type": "string",
            "example": "admin"
          }
        }
      },
      "login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "oainger0@craigslist.org"
          },
          "password": {
            "type": "string",
            "example": "KcAk6Mrg7DRM"
          }
        }
      }
    }
  }
}